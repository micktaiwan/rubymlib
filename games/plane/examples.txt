######################
# Example 1: pendule #
######################

o = PSObject.new

o << p(0,0,2)
o.c(:fixed,0,[0,0,2])
19.times do |i|
  o << p(0.1+i*0.1,0,2)
  o.c(:string,[i,i+1],0.1)
end

o.c(:boundary,:all,[:z,:>,0])

o.f(:gravity,:all)
@ps << o


##################
# Example 2: box #
##################

o = PSObject.new

o << p(0,0,2) # 0
o << p(1,0,2) # 1
o << p(1,2,2) # 2
o << p(0,2,2) # 3

o << p(0,0,2.5)
o << p(1,0,2.5)
o << p(1,2,2.5)
o << p(0,2,2.5)

o.c(:string,[0,4])
o.c(:string,[1,5])
o.c(:string,[2,6])
o.c(:string,[3,7])

o.c(:string,[0,1])
o.c(:string,[1,2])
o.c(:string,[2,3])
o.c(:string,[3,0])

o.c(:string,[4,5])
o.c(:string,[5,6])
o.c(:string,[6,7])
o.c(:string,[7,4])

o.c(:string,[0,6])
o.c(:string,[1,7])
o.c(:string,[2,4])
o.c(:string,[3,5])

o.c(:boundary,:all,[:z,:>,0])
#o.c(:boundary,0,[:z,:>,1])
o.c(:fixed,4,[0,0,2.5])
o.c(:fixed,5,[1,0,2.5])

o.f(:gravity,:all)

@ps << o

##################
FORCES
##################

# Example 1

o = PSObject.new
o << p(0,0,2)
o << p(1,0,2)
o.c(:string,[0,1])
o.f(:uni,0,[0,0,9.81*2])
o.f(:gravity,:all)
@ps << o

# Example 2

o = PSObject.new

o << p(0,0,2)
o << p(1,0,2)
o.c(:fixed,0)
o.c(:string,[0,1])
o.f(:motor,1,[[0,0,2],[0,1,0],9.82])
o.f(:gravity,:all)
@ps << o

# Example 3 : Piston

o = PSObject.new

o << p(0,0,2)
o << p(1,0,2)
o << p(0,0,4)
o.c(:fixed,0)
o.c(:string,[0,1])
o.c(:string,[1,2])
o.c(:boundary,2,[:x,:>,-0.1])
o.c(:boundary,2,[:x,:<,0.1])
o.c(:boundary,2,[:y,:>,-0.1])
o.c(:boundary,2,[:y,:<,0.1])

o.f(:motor,1,[[0,0,2],[0,1,0],-9.82])

o.f(:gravity,:all)
@ps << o


